{"version":3,"sources":["components/GoodsList.jsx","api/goods.js","App.js","index.js"],"names":["GoodsList","goods","map","id","name","color","style","key","getAll","fetch","then","response","json","get5First","a","allGoods","sortGoods","sort","b","localeCompare","slice","getRedGoods","filter","good","App","state","goodFromServer","setState","fiveFirstGoods","first5","redGoods","red","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wSAGaA,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,4BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACT,wBACEC,MAAO,CAAED,SACTE,IAAKJ,GAEJC,S,OCPF,SAASI,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,sEACAN,IADA,cACjBO,EADiB,OAGjBC,EAAY,YAAID,GAAUE,MAAK,SAACH,EAAGI,GAAJ,OAAUJ,EAAEV,KAAKe,cAAcD,EAAEd,SAH/C,kBAKhBY,EAAUI,MAAM,EAAG,IALH,2CAAH,qDAQTC,EAAc,kBAAMb,IAC9BE,MAAK,SAAAT,GAAK,OAAIA,EACZqB,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKlB,aCmDVmB,E,4MA7DbC,MAAQ,CACNxB,MAAO,I,EAGTc,S,sBAAW,4BAAAD,EAAA,sEACoBN,IADpB,OACHkB,EADG,OAGT,EAAKC,SAAS,CACZ1B,MAAOyB,IAJA,2C,EAQXE,e,sBAAiB,4BAAAd,EAAA,sEACMD,IADN,OACTgB,EADS,OAGf,EAAKF,SAAS,CACZ1B,MAAO4B,IAJM,2C,EAQjBC,S,sBAAW,sBAAAhB,EAAA,sDACTO,IAAcX,MAAK,SAACqB,GAClB,EAAKJ,SAAS,CACZ1B,MAAO8B,OAHF,2C,4CAQX,WACE,IAAQ9B,EAAU+B,KAAKP,MAAfxB,MAER,OACE,oCACE,qDACA,4BACEgC,KAAK,SACLC,QAASF,KAAKjB,UAFhB,kBAOA,4BACEkB,KAAK,SACLC,QAASF,KAAKJ,gBAFhB,sBAOA,4BACEK,KAAK,SACLC,QAASF,KAAKF,UAFhB,kBAOA,kBAAC,EAAD,CAAW7B,MAAOA,S,GAxDRkC,IAAMC,WCHxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.0900e4e8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(({ id, name, color }) => (\n      <li\n        style={{ color }}\n        key={id}\n      >\n        {name}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      color: PropTypes.string,\n    }),\n  ).isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = async() => {\n  const allGoods = await getAll();\n\n  const sortGoods = [...allGoods].sort((a, b) => a.name.localeCompare(b.name));\n\n  return sortGoods.slice(0, 5);\n};\n\nexport const getRedGoods = () => getAll()\n  .then(goods => goods\n    .filter(good => good.color === 'red'));\n","import React from 'react';\n\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n  }\n\n  allGoods = async() => {\n    const goodFromServer = await getAll();\n\n    this.setState({\n      goods: goodFromServer,\n    });\n  };\n\n  fiveFirstGoods = async() => {\n    const first5 = await get5First();\n\n    this.setState({\n      goods: first5,\n    });\n  };\n\n  redGoods = async() => {\n    getRedGoods().then((red) => {\n      this.setState({\n        goods: red,\n      });\n    });\n  }\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n        <button\n          type=\"button\"\n          onClick={this.allGoods}\n        >\n          Load All goods\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.fiveFirstGoods}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.redGoods}\n        >\n          Load red goods\n        </button>\n\n        <GoodsList goods={goods} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}